plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
//    id 'org.liquibase.gradle' version '2.1.0'
}

group = 'com.engwili'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }

    cucumberRuntime {
        extendsFrom testImplementation
    }

//    cucumberRuntime {
//        extendsFrom testImplementation
//    }
//    liquibaseRuntime.extendsFrom runtime
}

//buildscript {
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath "org.liquibase:liquibase-gradle-plugin:2.1.0"
//    }
//}
//apply plugin: 'org.liquibase.gradle'

repositories {
    mavenCentral()
}

ext {
    set('testcontainersVersion', "1.16.2")
}

dependencies {
    implementation 'org.liquibase:liquibase-core:4.7.1'
    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.apache.commons:commons-lang3:3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.6.3'
    implementation 'com.google.code.gson:gson:2.8.9'

    runtimeOnly 'org.postgresql:postgresql'

//    liquibaseRuntime 'org.liquibase:liquibase-core:4.5.0'
//    liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.0'
//    liquibaseRuntime 'info.picocli:picocli:4.6.1'
//    liquibaseRuntime 'org.postgresql:postgresql:42.3.3'
//    liquibaseRuntime group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
//    liquibaseRuntime("ch.qos.logback:logback-core:1.2.3")
//    liquibaseRuntime("ch.qos.logback:logback-classic:1.2.3")
//    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
//    liquibaseRuntime sourceSets.main.output

//    runtimeOnly 'com.h2database:h2:2.1.210'
//	implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.1.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'com.tngtech.archunit:archunit:0.22.0'
    testImplementation 'com.h2database:h2:2.1.210'
    testImplementation 'io.cucumber:cucumber-java:7.0.0'
    testImplementation 'io.cucumber:cucumber-junit:7.0.0'
    testImplementation 'io.cucumber:cucumber-spring:7.0.0'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.8.2'
    testImplementation 'io.rest-assured:rest-assured:4.4.0'
    testImplementation "org.testcontainers:postgresql:1.16.3"

}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = "PACKAGE"
            limit {
                minimum = 0.8
                counter = "LINE"
                value = "COVEREDRATIO"
            }
            setExcludes(List.of("com.engwili.arfe.entity",
                    "com.engwili.arfe.dto.*",
                    "com.engwili.arfe.mapper"))
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

task cucumberCli() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = [
                    '--plugin', 'pretty',
                    '--plugin', 'html:reports/cucumber-report.html',
                    '--glue', 'com.engwili.arfe.steps',
                    'src/test/resources']
        }
    }
}